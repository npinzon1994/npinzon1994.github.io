{"version":3,"file":"static/js/101.c4d37405.chunk.js","mappings":"6KACA,EAAwB,qB,2BCAxB,EAAuB,uBAAvB,EAAwD,0B,SCexD,GAbiBA,EAAAA,EAAAA,aAAW,WAAoCC,GAAS,IAA1CC,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAAMC,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IAAKC,EAAS,EAATA,UACjD,OACE,gBACEC,UAAS,UAAKC,EAAY,YAAIF,EAAYE,EAAkB,IAE5DP,IAAKA,EAAI,WAET,gBAAKQ,IAAKL,EAAKC,IAAKA,KACpB,0BAAOF,MAJFD,EAOX,ICqCA,EA5Cc,WACZ,IAAMQ,EAAQC,EAAAA,EAEd,GAAkCC,EAAAA,EAAAA,WAAS,GAAM,eAA1CN,EAAS,KAAEO,EAAY,KACxBC,GAAcC,EAAAA,EAAAA,QAAO,MAoB3B,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,SAAfA,IACYH,EAAYI,QACIC,wBAAwBC,IACnCC,OAAOC,cAG1BT,GAAa,GACbQ,OAAOE,oBAAoB,SAAUN,GAEzC,EAGA,OADAI,OAAOG,iBAAiB,SAAUP,GAC3B,WACLI,OAAOE,oBAAoB,SAAUN,EACvC,CACF,GAAG,KAGD,SAACQ,EAAA,EAAO,WACN,SAACC,EAAA,EAAO,CAACC,MAAM,WAAU,UACvB,eAAIpB,UAAWC,EAAc,SAC1BE,EAAMkB,KAAI,SAACC,GAAI,OACd,SAAC,EAAQ,CAEP1B,KAAM0B,EAAK1B,KACXC,IAAKyB,EAAKzB,IACVC,IAAKwB,EAAKxB,IACVC,UAAWA,EACXL,IAAKa,GALAe,EAAK3B,GAMV,SAMd,C","sources":["webpack://portfolio/./src/components/Tools/Tools.module.css?a038","webpack://portfolio/./src/components/Tools/ToolItem.module.css?8504","components/Tools/ToolItem.js","components/Tools/Tools.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"Tools_tools__+x8cY\",\"tools-list\":\"Tools_tools-list__dEN0Q\"};","// extracted by mini-css-extract-plugin\nexport default {\"tool\":\"ToolItem_tool__wMUR-\",\"visible\":\"ToolItem_visible__Xzzqa\"};","import React, { forwardRef } from \"react\";\r\nimport classes from \"./ToolItem.module.css\";\r\n\r\nconst ToolItem = forwardRef(({ id, name, img, alt, isVisible }, ref) => {\r\n  return (\r\n    <li\r\n      className={`${classes.tool} ${isVisible ? classes.visible : \"\"}`}\r\n      key={id}\r\n      ref={ref}\r\n    >\r\n      <img src={img} alt={alt} />\r\n      <span>{name}</span>\r\n    </li>\r\n  );\r\n});\r\n\r\nexport default ToolItem;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport classes from \"./Tools.module.css\";\nimport { tools as languagesAndTools } from \"./tools-data\";\nimport Wrapper from \"../Layout/Wrapper\";\nimport Section from \"../Layout/Section\";\nimport ToolItem from \"./ToolItem\";\n\nconst Tools = () => {\n  const tools = languagesAndTools;\n\n  const [isVisible, setIsVisible] = useState(false);\n  const toolItemRef = useRef(null);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const element = toolItemRef.current;\n      const elementPosition = element.getBoundingClientRect().top;\n      const windowHeight = window.innerHeight;\n\n      if (elementPosition < windowHeight) {\n        setIsVisible(true);\n        window.removeEventListener(\"scroll\", handleScroll);\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return (\n    <Wrapper>\n      <Section title=\"My Tools\">\n        <ul className={classes.tools}>\n          {tools.map((tool) => (\n            <ToolItem\n              key={tool.id}\n              name={tool.name}\n              img={tool.img}\n              alt={tool.alt}\n              isVisible={isVisible}\n              ref={toolItemRef}\n            />\n          ))}\n        </ul>\n      </Section>\n    </Wrapper>\n  );\n};\n\nexport default Tools;\n"],"names":["forwardRef","ref","id","name","img","alt","isVisible","className","classes","src","tools","languagesAndTools","useState","setIsVisible","toolItemRef","useRef","useEffect","handleScroll","current","getBoundingClientRect","top","window","innerHeight","removeEventListener","addEventListener","Wrapper","Section","title","map","tool"],"sourceRoot":""}